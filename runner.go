package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"time"
)

type Parsed struct {
	startStamp      int
	id              string
	title           string
	date            string
	image           string
	cost            string
	pageurl         string
	description     string
	fullDescription string
	parsedType      string
	slug            string
}

type AutoGenerated struct {
	Events []struct {
		ID                        string      `json:"id"`
		StartStamp                int         `json:"start_stamp"`
		EndStamp                  int         `json:"end_stamp"`
		Tz                        string      `json:"tz"`
		TzCode                    string      `json:"tz_code"`
		State                     string      `json:"state"`
		ListingID                 string      `json:"listing_id"`
		StartTime                 string      `json:"start_time"`
		EndTime                   string      `json:"end_time"`
		Full                      bool        `json:"full"`
		ReadOnly                  bool        `json:"read_only"`
		HasActivePaymentPlan      bool        `json:"has_active_payment_plan"`
		CanUseSepa                bool        `json:"can_use_sepa"`
		CanUseSofort              bool        `json:"can_use_sofort"`
		AlternativePaymentMethods bool        `json:"alternative_payment_methods"`
		HasSaleEnded              bool        `json:"has_sale_ended"`
		CountAttending            int         `json:"count_attending"`
		HostID                    string      `json:"host_id"`
		CapacityIds               []string    `json:"capacity_ids"`
		RateIds                   []string    `json:"rate_ids"`
		PaymentPlanID             interface{} `json:"payment_plan_id"`
	} `json:"events"`
	Tags []struct {
		ID          string      `json:"id"`
		Name        string      `json:"name"`
		Slug        string      `json:"slug"`
		Suggestable interface{} `json:"suggestable"`
		New         bool        `json:"new"`
	} `json:"tags"`
	Images []struct {
		ID             string      `json:"id"`
		UploadcareID   string      `json:"uploadcare_id"`
		OriginalWidth  interface{} `json:"original_width"`
		OriginalHeight interface{} `json:"original_height"`
		CropWidth      interface{} `json:"crop_width"`
		CropHeight     interface{} `json:"crop_height"`
		CropX          interface{} `json:"crop_x"`
		CropY          interface{} `json:"crop_y"`
		URL            string      `json:"url"`
		URL500         string      `json:"url_500"`
		URL160         string      `json:"url_160"`
		URL50          string      `json:"url_50"`
		Blur           bool        `json:"blur"`
		BlurStrength   interface{} `json:"blur_strength"`
		IsGif          bool        `json:"is_gif"`
		SocialWidth    interface{} `json:"social_width,omitempty"`
		SocialHeight   interface{} `json:"social_height,omitempty"`
		SocialX        interface{} `json:"social_x,omitempty"`
		SocialY        interface{} `json:"social_y,omitempty"`
		SocialImage    string      `json:"social_image,omitempty"`
	} `json:"images"`
	Listing struct {
		ID                                   string        `json:"id"`
		Slug                                 string        `json:"slug"`
		SlugParam                            string        `json:"slug_param"`
		Title                                string        `json:"title"`
		Privacy                              string        `json:"privacy"`
		State                                string        `json:"state"`
		Address                              string        `json:"address"`
		SocialDealTwitterEnabled             bool          `json:"social_deal_twitter_enabled"`
		SocialDealTwitterMessage             interface{}   `json:"social_deal_twitter_message"`
		SocialDealTwitterPercent             float64       `json:"social_deal_twitter_percent"`
		SocialDealTwitterFixed               interface{}   `json:"social_deal_twitter_fixed"`
		SocialDealTwitterType                string        `json:"social_deal_twitter_type"`
		Description                          string        `json:"description"`
		DescriptionHTML                      string        `json:"description_html"`
		RefundOffset                         int           `json:"refund_offset"`
		RefundOffsetType                     string        `json:"refund_offset_type"`
		CategoryID                           string        `json:"category_id"`
		CategoryKey                          string        `json:"category_key"`
		CheckoutProduct                      interface{}   `json:"checkout_product"`
		CreatedAt                            time.Time     `json:"created_at"`
		UpdatedAt                            time.Time     `json:"updated_at"`
		Hashtag                              string        `json:"hashtag"`
		GoogleAnalyticsID                    interface{}   `json:"google_analytics_id"`
		GoogleAnalyticsEcommerce             bool          `json:"google_analytics_ecommerce"`
		GoogleTagManagerIds                  []interface{} `json:"google_tag_manager_ids"`
		FacebookPixelID                      interface{}   `json:"facebook_pixel_id"`
		FacebookPixelCodes                   []interface{} `json:"facebook_pixel_codes"`
		FeaturedScore                        int           `json:"featured_score"`
		BaseScore                            float64       `json:"base_score"`
		BaseMultiplier                       float64       `json:"base_multiplier"`
		ShowAvatarsOfBookers                 bool          `json:"show_avatars_of_bookers"`
		ShowCapacityAlert                    bool          `json:"show_capacity_alert"`
		Pseudonym                            interface{}   `json:"pseudonym"`
		Price                                float64       `json:"price"`
		Capacity                             interface{}   `json:"capacity"`
		Provider                             string        `json:"provider"`
		ProviderKey                          string        `json:"provider_key"`
		SendPurchaseNotifications            bool          `json:"send_purchase_notifications"`
		SendPurchaseNotificationsImmediately bool          `json:"send_purchase_notifications_immediately"`
		HasActiveDiscountCodes               bool          `json:"has_active_discount_codes"`
		HasLockedRates                       bool          `json:"has_locked_rates"`
		Website                              interface{}   `json:"website"`
		HideDate                             bool          `json:"hide_date"`
		ReviewedAt                           time.Time     `json:"reviewed_at"`
		NoneditableOffset                    int           `json:"noneditable_offset"`
		NontransferrableOffset               int           `json:"nontransferrable_offset"`
		EndSalesOffset                       int           `json:"end_sales_offset"`
		SendTicketPdfInEmails                bool          `json:"send_ticket_pdf_in_emails"`
		PrivateNoteHTML                      interface{}   `json:"private_note_html"`
		ContactDetails                       interface{}   `json:"contact_details"`
		Referral                             string        `json:"referral"`
		CommissionCode                       string        `json:"commission_code"`
		RateType                             string        `json:"rate_type"`
		EnterAccessKeyText                   interface{}   `json:"enter_access_key_text"`
		AllInPricing                         bool          `json:"all_in_pricing"`
		Tz                                   string        `json:"tz"`
		TzCode                               string        `json:"tz_code"`
		NotifyPasses                         bool          `json:"notify_passes"`
		WaivePaymentPlanFee                  bool          `json:"waive_payment_plan_fee"`
		MailchimpAPIKey                      interface{}   `json:"mailchimp_api_key"`
		MailchimpListID                      interface{}   `json:"mailchimp_list_id"`
		SpamReviewed                         bool          `json:"spam_reviewed"`
		EmailReminders                       bool          `json:"email_reminders"`
		GetTicketsText                       string        `json:"get_tickets_text"`
		ShowSocialButtons                    bool          `json:"show_social_buttons"`
		AvailablePaymentMethods              struct {
			Invoice bool `json:"invoice"`
			Globee  bool `json:"globee"`
		} `json:"available_payment_methods"`
		AvailableSecurityMethods struct {
			ThreeDSecure bool `json:"three_d_secure"`
		} `json:"available_security_methods"`
		CountryCode             string      `json:"country_code"`
		ShowMarker              bool        `json:"show_marker"`
		AddressCity             interface{} `json:"address_city"`
		AmexOnly                bool        `json:"amex_only"`
		AllowWaitlist           bool        `json:"allow_waitlist"`
		HideFromWidgets         bool        `json:"hide_from_widgets"`
		StripeUserID            string      `json:"stripe_user_id"`
		StripeCountryCode       string      `json:"stripe_country_code"`
		StripeSupportedCurrency bool        `json:"stripe_supported_currency"`
		HasSeats                bool        `json:"has_seats"`
		SeatsEventsLinked       bool        `json:"seats_events_linked"`
		CoverPhoto              struct {
			ID             string      `json:"_id"`
			Blur           bool        `json:"blur"`
			BlurStrength   interface{} `json:"blur_strength"`
			CreatedAt      time.Time   `json:"created_at"`
			CropHeight     interface{} `json:"crop_height"`
			CropWidth      interface{} `json:"crop_width"`
			CropX          interface{} `json:"crop_x"`
			CropY          interface{} `json:"crop_y"`
			IsGif          bool        `json:"is_gif"`
			OriginalHeight interface{} `json:"original_height"`
			OriginalWidth  interface{} `json:"original_width"`
			UpdatedAt      time.Time   `json:"updated_at"`
			UploadcareID   string      `json:"uploadcare_id"`
		} `json:"cover_photo"`
		PrivacyPolicyURL                 interface{}   `json:"privacy_policy_url"`
		TermsOfServiceURL                interface{}   `json:"terms_of_service_url"`
		ThreeDSecureOnly                 bool          `json:"three_d_secure_only"`
		ThreeDSecure                     bool          `json:"three_d_secure"`
		RestrictedCardBrands             []interface{} `json:"restricted_card_brands"`
		EventDisclosureCapacity          int           `json:"event_disclosure_capacity"`
		InvoiceDescription               interface{}   `json:"invoice_description"`
		SeatsPublicKey                   interface{}   `json:"seats_public_key"`
		GlobeeAPIKey                     interface{}   `json:"globee_api_key"`
		StartStamp                       interface{}   `json:"start_stamp"`
		EndStamp                         interface{}   `json:"end_stamp"`
		StartTime                        interface{}   `json:"start_time"`
		EndTime                          interface{}   `json:"end_time"`
		PresaleDetailText                interface{}   `json:"presale_detail_text"`
		RestrictedCardBins               []interface{} `json:"restricted_card_bins"`
		PaymentRestrictionType           string        `json:"payment_restriction_type"`
		HasTieredRates                   bool          `json:"has_tiered_rates"`
		CommentsHeadline                 interface{}   `json:"comments_headline"`
		EventsHeadline                   interface{}   `json:"events_headline"`
		HeaderBuyButton                  string        `json:"header_buy_button"`
		HostHeadline                     interface{}   `json:"host_headline"`
		RegisterButton                   interface{}   `json:"register_button"`
		RegisterHeadline                 interface{}   `json:"register_headline"`
		TicketsButton                    interface{}   `json:"tickets_button"`
		FreeText                         interface{}   `json:"free_text"`
		BaseCurrency                     string        `json:"base_currency"`
		SrcCurrency                      string        `json:"src_currency"`
		HostID                           string        `json:"host_id"`
		NeedsApproval                    bool          `json:"needs_approval"`
		HasPhotos                        bool          `json:"has_photos"`
		Free                             bool          `json:"free"`
		CanGenerateInvoice               bool          `json:"can_generate_invoice"`
		AutoGenerateInvoice              bool          `json:"auto_generate_invoice"`
		AlternativePaymentMethodsEnabled bool          `json:"alternative_payment_methods_enabled"`
		SecurityMethodsEnabled           bool          `json:"security_methods_enabled"`
		UnauthorizedGlobeeTickets        bool          `json:"unauthorized_globee_tickets"`
		Alipay                           bool          `json:"alipay"`
		Amex                             bool          `json:"amex"`
		Bancontact                       bool          `json:"bancontact"`
		Eps                              bool          `json:"eps"`
		Giropay                          bool          `json:"giropay"`
		Globee                           bool          `json:"globee"`
		Ideal                            bool          `json:"ideal"`
		Invoice                          bool          `json:"invoice"`
		Masterpass                       bool          `json:"masterpass"`
		Multibanco                       bool          `json:"multibanco"`
		Sepa                             bool          `json:"sepa"`
		Sofort                           bool          `json:"sofort"`
		Przelewy                         bool          `json:"przelewy"`
		Wechat                           bool          `json:"wechat"`
		Visacheckout                     bool          `json:"visacheckout"`
		AmericanExpressOnly              bool          `json:"american_express_only"`
		DinersClubOnly                   bool          `json:"diners_club_only"`
		DiscoverOnly                     bool          `json:"discover_only"`
		JcbOnly                          bool          `json:"jcb_only"`
		MastercardOnly                   bool          `json:"mastercard_only"`
		UnionpayOnly                     bool          `json:"unionpay_only"`
		VisaOnly                         bool          `json:"visa_only"`
		UnknownOnly                      interface{}   `json:"unknown_only"`
		ImageURL                         string        `json:"image_url"`
		ImageURL500                      string        `json:"image_url_500"`
		ImageURL160                      string        `json:"image_url_160"`
		ImageURL50                       string        `json:"image_url_50"`
		IsActive                         bool          `json:"is_active"`
		Latitude                         float64       `json:"latitude"`
		Longitude                        float64       `json:"longitude"`
		Area                             string        `json:"area"`
		City                             string        `json:"city"`
		Province                         string        `json:"province"`
		Country                          string        `json:"country"`
		Postal                           string        `json:"postal"`
		VenueName                        string        `json:"venue_name"`
		FoursquareID                     interface{}   `json:"foursquare_id"`
		TicketmasterVenueID              interface{}   `json:"ticketmaster_venue_id"`
		TicketmasterVenueName            interface{}   `json:"ticketmaster_venue_name"`
		TicketmasterAttractionIds        []interface{} `json:"ticketmaster_attraction_ids"`
		HostName                         string        `json:"host_name"`
		CanEdit                          bool          `json:"can_edit"`
		CanManage                        bool          `json:"can_manage"`
		CanScan                          bool          `json:"can_scan"`
		TagIds                           []string      `json:"tag_ids"`
		CoverPhotoID                     string        `json:"cover_photo_id"`
		EventPhotoID                     string        `json:"event_photo_id"`
		ImageIds                         []interface{} `json:"image_ids"`
		FacebookPageTabID                interface{}   `json:"facebook_page_tab_id"`
		EventID                          string        `json:"event_id"`
		EventIds                         []string      `json:"event_ids"`
		HostFieldIds                     []string      `json:"host_field_ids"`
		FacebookOfficialEventID          interface{}   `json:"facebook_official_event_id"`
		CostID                           string        `json:"cost_id"`
		ReferralCodeIds                  []interface{} `json:"referral_code_ids"`
		MembershipID                     interface{}   `json:"membership_id"`
		TaxIds                           []interface{} `json:"tax_ids"`
		OrganizationID                   string        `json:"organization_id"`
		FacebookPixelIds                 []interface{} `json:"facebook_pixel_ids"`
	} `json:"listing"`
}

type portfolio struct {
	Data struct {
		Portfolio struct {
			Hosting []struct {
				ID                string `json:"id"`
				URL               string `json:"url"`
				FormattedDuration string `json:"formatted_duration"`
			} `json:"hosting"`
		} `json:"portfolio"`
	} `json:"data"`
}

var netClient = &http.Client{
	Timeout: time.Second * 10,
}

func main() {
	loadAllEvents()
}

func loadAllEvents() {
	body := loadURL("https://www.universe.com/users/push-comedy-theater-CT01HK/portfolio/current.json")

	var m portfolio

	err := json.Unmarshal(body, &m)

	if err != nil {
		panic(err)
	}

	event := m.Data.Portfolio.Hosting[0]
	print(event.ID)
	loadEvent(event.ID, event.FormattedDuration)
	// for _, event := range m.Data.Portfolio.Hosting {
	// 	print(event.ID)
	// 	print("\n")
	// 	loadEvent(event.ID)
	// }

}

func loadEvent(id string, formattedDuration string) []byte {
	url := fmt.Sprintf("https://www.universe.com/api/v2/listings/%s.json", id)
	fmt.Printf("Loading url: %s\n", url)

	var m2 AutoGenerated

	body := loadURL(url)

	err := json.Unmarshal(body, &m2)
	if err != nil {
		panic(err)
	}

	coverPhotoID := m2.Listing.CoverPhotoID
	coverPhotoURL := ""
	for _, image := range m2.Images {
		if image.ID == coverPhotoID {
			coverPhotoURL = image.URL160
		}
	}

	cost, costString := 0.0, ""

	cost = m2.Listing.Price
	if cost == 0 {
		costString = "Free"
	} else {
		costString = fmt.Sprintf("$%.2f", cost)
	}

	a := Parsed{
		startStamp:      m2.Events[0].StartStamp,
		id:              m2.Listing.ID,
		title:           m2.Listing.Title,
		date:            formattedDuration,
		image:           coverPhotoURL,
		cost:            costString,
		pageurl:         fmt.Sprintf("https://www.universe.com/events/%s", m2.Listing.SlugParam),
		description:     m2.Listing.Description,
		fullDescription: m2.Listing.DescriptionHTML,
	}
	fmt.Printf("%v\n", a)
	return body
}

func loadURL(url string) []byte {
	response, _ := netClient.Get(url)
	body, err := ioutil.ReadAll(response.Body)
	if err != nil {
		panic(err)
	}
	return body
}
